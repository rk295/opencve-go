package opencve

import (
	"context"
	"net/url"
	"path"
)

// CWEService is an interface for interacting with the cwe endpoints
type CWEService interface {
	List(context.Context, QueryFilter) (*CWEList, error)
	Get(context.Context, string) (*CWEDetails, error)
	GetCWEAssociatedCVEs(context.Context, string) (*CWECVEList, error)
}

// GetCWEAssociatedCVEs Get the list of CVEs associated to a CWE.
func (c *CWEClient) GetCWEAssociatedCVEs(ctx context.Context, cweID string) (*CWECVEList, error) {
	url := &url.URL{
		Scheme: "https",
		Host:   c.client.apiURL,
		Path:   path.Join(cweURL, cweID, "cve"),
	}

	res := &CWECVEList{}
	if err := c.req(ctx, url, res); err != nil {
		return nil, err
	}

	return res, nil
}
