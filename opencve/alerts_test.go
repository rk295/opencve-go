package opencve

import (
	"context"
	"net/http"
	"testing"

	"github.com/jarcoal/httpmock"
	"github.com/stretchr/testify/assert"
)

func TestAlertList(t *testing.T) {
	ctx := context.Background()

	resp := `[{
		"id": "a7098731-ddca-4a40-9b0e-e7f513ce76ad",
		"created_at": "2021-04-01T19:40:29Z",
		"cve": "CVE-2020-27223",
		"details": {
		  "products": [],
		  "vendors": [
			"apache"
		  ],
		  "filters": [
			"references"
		  ]
		}
	  }]`

	httpmock.RegisterResponder("GET", "https://www.opencve.io/api/reports/E8FBU53LDW8O/alerts",
		httpmock.NewStringResponder(http.StatusOK, resp))

	api, err := New("user", "pass", nil)
	assert.Nil(t, err)

	list, err := api.Alert().List(ctx, "E8FBU53LDW8O")
	assert.Nil(t, err)
	assert.Len(t, *list, 1)
	assert.Equal(t, "a7098731-ddca-4a40-9b0e-e7f513ce76ad", (*list)[0].ID)
}

func TestAlertGet(t *testing.T) {
	ctx := context.Background()

	resp := `[{
		"cve": "CVE-2020-27223",
		"type": "references",
		"details": {
		  "changed": [],
		  "added": [{
			"url": "https://security.netapp.com/advisory/ntap-20210401-0005/",
			"name": "https://security.netapp.com/advisory/ntap-20210401-0005/",
			"refsource": "CONFIRM",
			"tags": []
		  }],
		  "removed": []
		}
	  }]`

	httpmock.RegisterResponder("GET", "https://www.opencve.io/api/reports/E8FBU53LDW8O/alerts/a7098731-ddca-4a40-9b0e-e7f513ce76ad",
		httpmock.NewStringResponder(http.StatusOK, resp))

	api, err := New("user", "pass", nil)
	assert.Nil(t, err)

	list, err := api.Alert().Get(ctx, "E8FBU53LDW8O", "a7098731-ddca-4a40-9b0e-e7f513ce76ad")
	assert.Nil(t, err)
	assert.Len(t, *list, 1)
	assert.Equal(t, "CVE-2020-27223", (*list)[0].CVE)
}
