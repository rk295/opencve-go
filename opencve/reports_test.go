package opencve

import (
	"context"
	"net/http"
	"testing"

	"github.com/jarcoal/httpmock"
	"github.com/stretchr/testify/assert"
)

func TestReportsList(t *testing.T) {
	ctx := context.Background()

	resp := `[
		{
		  "id": "E8FBU53LDW8O",
		  "created_at": "2021-04-01T19:40:30Z",
		  "details": [
			"apache"
		  ]
		}
	  ]`

	httpmock.RegisterResponder("GET", "https://www.opencve.io/api/reports",
		httpmock.NewStringResponder(http.StatusOK, resp))

	api, err := New("user", "pass", nil)
	assert.Nil(t, err)

	cveList, err := api.Reports().List(ctx)
	assert.Nil(t, err)
	assert.Len(t, *cveList, 1)
	assert.Equal(t, "E8FBU53LDW8O", (*cveList)[0].ID)
}

func TestReportGet(t *testing.T) {
	ctx := context.Background()

	resp := `{
		"id": "E8FBU53LDW8O",
		"created_at": "2021-04-01T19:40:30Z",
		"details": [
		  "apache"
		],
		"alerts": [{
		  "id": "a7098731-ddca-4a40-9b0e-e7f513ce76ad",
		  "created_at": "2021-04-01T19:40:29Z",
		  "cve": "CVE-2020-27223",
		  "details": {
			"products": [],
			"vendors": [
			  "apache"
			],
			"filters": [
			  "references"
			]
		  }
		}]
	  }`

	httpmock.RegisterResponder("GET", "https://www.opencve.io/api/reports/E8FBU53LDW8O",
		httpmock.NewStringResponder(http.StatusOK, resp))

	api, err := New("user", "pass", nil)
	assert.Nil(t, err)

	report, err := api.Reports().Get(ctx, "E8FBU53LDW8O")
	assert.Nil(t, err)
	assert.Equal(t, "E8FBU53LDW8O", report.ID)
}
